# OASIS_START
# DO NOT EDIT (digest: 3485b001cfd422783556cda95d680ad7)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library lvm
"lib/lvm.cmxs": use_lvm
"lib/result.cmx": for-pack(Lvm)
"lib/s.cmx": for-pack(Lvm)
"lib/monad.cmx": for-pack(Lvm)
"lib/absty.cmx": for-pack(Lvm)
"lib/allocator.cmx": for-pack(Lvm)
"lib/constants.cmx": for-pack(Lvm)
"lib/label.cmx": for-pack(Lvm)
"lib/metadata.cmx": for-pack(Lvm)
"lib/crc.cmx": for-pack(Lvm)
"lib/iO.cmx": for-pack(Lvm)
"lib/logging.cmx": for-pack(Lvm)
"lib/lvmconfiglex.cmx": for-pack(Lvm)
"lib/lvmconfigparser.cmx": for-pack(Lvm)
"lib/lv.cmx": for-pack(Lvm)
"lib/uuid.cmx": for-pack(Lvm)
"lib/pv.cmx": for-pack(Lvm)
"lib/redo.cmx": for-pack(Lvm)
"lib/tag.cmx": for-pack(Lvm)
"lib/utils.cmx": for-pack(Lvm)
"lib/vg.cmx": for-pack(Lvm)
<lib/*.ml{,i}>: pkg_rpclib.syntax
<lib/*.ml{,i}>: pkg_rpclib
<lib/*.ml{,i}>: pkg_threads
<lib/*.ml{,i}>: pkg_camldm
<lib/*.ml{,i}>: pkg_uuidm
<lib/*.ml{,i}>: pkg_re.str
<lib/*.ml{,i}>: pkg_cstruct
<lib/*.ml{,i}>: pkg_mirage-block-unix
# Library lvm_mapper
"lib/lvm_mapper.cmxs": use_lvm_mapper
<lib/*.ml{,i}>: pkg_stdext
# Executable tag_test
<lib_test/tag_test.{native,byte}>: use_lvm
<lib_test/tag_test.{native,byte}>: pkg_oUnit
<lib_test/tag_test.{native,byte}>: pkg_rpclib.syntax
<lib_test/tag_test.{native,byte}>: pkg_rpclib
<lib_test/tag_test.{native,byte}>: pkg_threads
<lib_test/tag_test.{native,byte}>: pkg_camldm
<lib_test/tag_test.{native,byte}>: pkg_uuidm
<lib_test/tag_test.{native,byte}>: pkg_re.str
<lib_test/tag_test.{native,byte}>: pkg_cstruct
<lib_test/tag_test.{native,byte}>: pkg_mirage-block-unix
<lib_test/*.ml{,i}>: pkg_oUnit
<lib_test/tag_test.{native,byte}>: custom
# Executable allocator_test
<lib_test/allocator_test.{native,byte}>: use_lvm
<lib_test/allocator_test.{native,byte}>: pkg_kaputt
<lib_test/allocator_test.{native,byte}>: pkg_stdext
<lib_test/allocator_test.{native,byte}>: pkg_rpclib.syntax
<lib_test/allocator_test.{native,byte}>: pkg_rpclib
<lib_test/allocator_test.{native,byte}>: pkg_threads
<lib_test/allocator_test.{native,byte}>: pkg_camldm
<lib_test/allocator_test.{native,byte}>: pkg_uuidm
<lib_test/allocator_test.{native,byte}>: pkg_re.str
<lib_test/allocator_test.{native,byte}>: pkg_cstruct
<lib_test/allocator_test.{native,byte}>: pkg_mirage-block-unix
<lib_test/*.ml{,i}>: use_lvm
<lib_test/*.ml{,i}>: pkg_kaputt
<lib_test/*.ml{,i}>: pkg_stdext
<lib_test/*.ml{,i}>: pkg_rpclib.syntax
<lib_test/*.ml{,i}>: pkg_rpclib
<lib_test/*.ml{,i}>: pkg_threads
<lib_test/*.ml{,i}>: pkg_camldm
<lib_test/*.ml{,i}>: pkg_uuidm
<lib_test/*.ml{,i}>: pkg_re.str
<lib_test/*.ml{,i}>: pkg_cstruct
<lib_test/*.ml{,i}>: pkg_mirage-block-unix
<lib_test/allocator_test.{native,byte}>: custom
# OASIS_STOP
<lib/*.ml{,i}>: syntax_camlp4o
